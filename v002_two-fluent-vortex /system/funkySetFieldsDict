/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.1                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      funkySetFieldsDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
expressions
(
	vortexU1
	{
		variables 
		(
			"torCen=vector(7.55,0,0);"// tor center, центр тора
			"torRad=vector(4,3.5,0);"//tor radius, радиусы тора х-радиус кольца, у-радиус образующей
			"vMax=10;"
			"angle=85 * 0.0174533;"
			"torVel=vector(vMax*cos(angle),vMax*sin(angle),0);"//tor boundary velocity, максимальные скорости в торе (x горизонатальная состовляющая (кольцевая) - y вертикальная (окружная))
			"sPos=pos()-torCen;"//shifted position, смещенный центр тора			
			"x2=pow(sPos.x,2);"
			"y2=pow(sPos.y,2);"
			"z2=pow(sPos.z,2);"
			"r12=pow(torRad.x,2);"
			"r22=pow(torRad.y,2);"
			"trv=sqrt(x2+y2);"
			"rv=trv<0.0001?0.0001:trv;"
			"vcred=torVel.x*trv/(torRad.x+torRad.y);"// макс скорость по кольцу
			"xyVect=vector(sPos.x, sPos.y, 0);" // проекция вектора точки на плоскость xy
			"xyVectNorm=xyVect/mag(xyVect);"
			"resCNorm=vector(0,0,1)^xyVectNorm;"
			"resC=resCNorm*vcred;"
			"cenLen=mag(xyVect);"
			"cirPoint=(torRad.x/cenLen)*xyVect-sPos;"
			"cirLen=mag(cirPoint);"
			"cirPointNorm=cirPoint/cirLen;"
			"cirVel=(cirLen/torRad.y)*torVel.y;"// макс скорость по образующей
			"resO=(resCNorm^cirPointNorm)*cirVel;"
			"res=resC+resO;"
		);
		field U; //field to initialise
		expression "res"; 
		condition  "pow(x2+y2+z2+r12-r22,2) - 4*r12*(x2+y2)<=0";
		verbose true;
	}
	vortexT1
	{
		variables 
		(
			"torCen=vector(7.55,0,0);"// tor center, центр тора
			"torRad=vector(4,3.5,0);"//tor radius, радиусы тора х-радиус кольца, у-радиус образующей
			"torVel=vector(5,15,0);"//tor boundary velocity, максимальные скорости в торе (x горизонатальная состовляющая (кольцевая) - y вертикальная (окружная))
			"sPos=pos()-torCen;"//shifted position, смещенный центр тора			
			"x2=pow(sPos.x,2);"
			"y2=pow(sPos.y,2);"
			"z2=pow(sPos.z,2);"
			"r12=pow(torRad.x,2);"
			"r22=pow(torRad.y,2);"
		);
		field T; //field to initialise
		expression "0.9"; 
		condition  "pow(x2+y2+z2+r12-r22,2) - 4*r12*(x2+y2)<=0";
		verbose true;		
	}
	vortexU2
	{
		variables 
		(
			"torCen=vector(-7.55,0,0);"// tor center, центр тора
			"torRad=vector(4,3.5,0);"//tor radius, радиусы тора х-радиус кольца, у-радиус образующей
			"vMax=10;"
			"angle=75 * 0.0174533;"
			"torVel=vector(vMax*cos(angle),vMax*sin(angle),0);"//tor boundary velocity, максимальные скорости в торе (x горизонатальная состовляющая (кольцевая) - y вертикальная (окружная))
			"sPos=pos()-torCen;"//shifted position, смещенный центр тора			
			"x2=pow(sPos.x,2);"
			"y2=pow(sPos.y,2);"
			"z2=pow(sPos.z,2);"
			"r12=pow(torRad.x,2);"
			"r22=pow(torRad.y,2);"
			"trv=sqrt(x2+y2);"
			"rv=trv<0.0001?0.0001:trv;"
			"vcred=torVel.x*trv/(torRad.x+torRad.y);"// макс скорость по кольцу
			"xyVect=vector(sPos.x, sPos.y, 0);" // проекция вектора точки на плоскость xy
			"xyVectNorm=xyVect/mag(xyVect);"
			"resCNorm=vector(0,0,1)^xyVectNorm;"
			"resC=resCNorm*vcred;"
			"cenLen=mag(xyVect);"
			"cirPoint=(torRad.x/cenLen)*xyVect-sPos;"
			"cirLen=mag(cirPoint);"
			"cirPointNorm=cirPoint/cirLen;"
			"cirVel=(cirLen/torRad.y)*torVel.y;"// макс скорость по образующей
			"resO=(resCNorm^cirPointNorm)*cirVel;"
			"res=resC+resO;"
		);
		field U; //field to initialise
		expression "res"; 
		condition  "pow(x2+y2+z2+r12-r22,2) - 4*r12*(x2+y2)<=0";
		verbose true;
	}
	vortexT1
	{
		variables 
		(
			"torCen=vector(-7.55,0,0);"// tor center, центр тора
			"torRad=vector(4,3.5,0);"//tor radius, радиусы тора х-радиус кольца, у-радиус образующей
			"torVel=vector(5,15,0);"//tor boundary velocity, максимальные скорости в торе (x горизонатальная состовляющая (кольцевая) - y вертикальная (окружная))
			"sPos=pos()-torCen;"//shifted position, смещенный центр тора			
			"x2=pow(sPos.x,2);"
			"y2=pow(sPos.y,2);"
			"z2=pow(sPos.z,2);"
			"r12=pow(torRad.x,2);"
			"r22=pow(torRad.y,2);"
		);
		field T; //field to initialise
		expression "0.9"; 
		condition  "pow(x2+y2+z2+r12-r22,2) - 4*r12*(x2+y2)<=0";
		verbose true;		
	}
);